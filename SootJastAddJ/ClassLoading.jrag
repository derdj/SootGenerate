aspect ClassLoading {

  public static final int Program.SRC_PREC_JAVA = 1;
  public static final int Program.SRC_PREC_CLASS = 2;
  public static final int Program.SRC_PREC_ONLY_CLASS = 3;

  private int Program.srcPrec = 0;
  public void Program.setSrcPrec(int i) {
    srcPrec = i;
  }

  public boolean CompilationUnit.isResolved = false;

  private HashMap Program.loadedCompilationUnit = new HashMap();
  public boolean Program.hasLoadedCompilationUnit(String fileName) {
    return loadedCompilationUnit.containsKey(fileName);
  }
  public CompilationUnit Program.getCachedOrLoadCompilationUnit(String fileName) {
    if(loadedCompilationUnit.containsKey(fileName))
      return (CompilationUnit)loadedCompilationUnit.get(fileName);
    addSourceFile(fileName);
    return (CompilationUnit)loadedCompilationUnit.get(fileName);
  }

  refine void Program.addCompilationUnit(CompilationUnit unit) {
    try {
      if(unit.pathName() != null) {
        String fileName = new File(unit.pathName()).getCanonicalPath();
        loadedCompilationUnit.put(fileName, unit);
      }
    } catch (IOException e) {
    }
    refined(unit);
  }

  refine ClassPath eq Program.getCompilationUnit(String name) {
      classPath.initPaths();
      try {
      //  if(sourceFiles.selectCompilationUnit(name))
      //    return sourceFiles.getCompilationUnit();
        ClassSource sourcePart = ClassSource.NONE;
        ClassSource classPart = ClassSource.NONE;
        for (PathPart part: classPath.getSourcePath()) {
            sourcePart = part.findSource(typeName);
            if (sourcePart != ClassSource.NONE) {
              break;
            }
          }
          for (PathPart part: classPath.getClassPath()) {
            classPart = part.findSource(typeName);
            if (classPart != ClassSource.NONE) {
              break;
            }
          }
        
        if(sourcePart != ClassSource.NONE && srcPrec == SRC_PREC_JAVA) {
          CompilationUnit unit = sourcePart.parseCompilationUnit(this);
          int index = typeName.lastIndexOf('.');
          if(index == -1)
            return unit;
          String pkgName = typeName.substring(0, index);
          if(pkgName.equals(unit.getPackageDecl()))
            return unit;
        }
        if(classPart != ClassSource.NONE && srcPrec == SRC_PREC_CLASS) {
          CompilationUnit unit = classPart.parseCompilationUnit(this);
          int index = typeName.lastIndexOf('.');
          if(index == -1)
            return unit;
          String pkgName = typeName.substring(0, index);
          if(pkgName.equals(unit.getPackageDecl()))
            return unit;
        }
        if(srcPrec == SRC_PREC_ONLY_CLASS) {
          if(classPart != null) {
            CompilationUnit unit = classPart.parseCompilationUnit(this);
            int index = typeName.lastIndexOf('.');
            if(index == -1)
              return unit;
            String pkgName = typeName.substring(0, index);
            if(pkgName.equals(unit.getPackageDecl()))
              return unit;
          }
        }
        else if(sourcePart != null && (classPart == ClassSource.NONE ||
                classPart.lastModified() < sourcePart.lastModified())) {
          CompilationUnit unit = sourcePart.parseCompilationUnit(this);
          int index = typeName.lastIndexOf('.');
          if(index == -1)
            return unit;
          String pkgName = typeName.substring(0, index);
          if(pkgName.equals(unit.getPackageDecl()))
            return unit;
        }
        else if(classPart != null) {
          CompilationUnit unit = classPart.parseCompilationUnit(this);
          int index = typeName.lastIndexOf('.');
          if(index == -1)
            return unit;
          String pkgName = typeName.substring(0, index);
          if(pkgName.equals(unit.getPackageDecl()))
            return unit;
        }
        return emptyCompilationUnit();
      }
      catch(IOException e) {
      }
      return emptyCompilationUnit();
    }

}
